{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOption.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","buttonType","Object","keys","map","key","className","styles","type","name","onClick","uniqid","Section","props","title","children","widgetSection","defaultProps","Statistics","good","neutral","bad","total","percentage","reset","amount","button","Notification","message","INITIAL_STATE","App","state","positivePercentage","clickHandler","e","setState","target","item","this","Math","round","Number","totalFeedbacks","countTotalFeedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4f6c5ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"type\":\"Statistics_type__2cAkA\",\"amount\":\"Statistics_amount__4AAWI\",\"button\":\"Statistics_button__3xFDr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"widgetSection\":\"Section_widgetSection__3SgI2\",\"title\":\"Section_title__21ldL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOption_button__BVk9z\",\"good\":\"FeedbackOption_good__cs3sJ FeedbackOption_button__BVk9z\",\"neutral\":\"FeedbackOption_neutral__1hnYZ FeedbackOption_button__BVk9z\",\"bad\":\"FeedbackOption_bad__17l7Q FeedbackOption_button__BVk9z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__3FJsN\"};","import React from 'react';\r\nimport uniqid from 'uniqid';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOption.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const buttonType = Object.keys(options);\r\n  return (\r\n    <>\r\n      {buttonType.map(key => {\r\n        return (\r\n          <button\r\n            className={styles[key]}\r\n            type=\"button\"\r\n            key={uniqid()}\r\n            name={key}\r\n            onClick={onLeaveFeedback}>\r\n            {key}\r\n          </button>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = props => {\r\n  const { title, children } = props;\r\n  return (\r\n    <section className={styles.widgetSection}>\r\n      <p className={styles.title}>{title}</p>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nSection.defaultProps = {\r\n  title: ' ',\r\n};\r\nexport default Section;\r\n","import React from 'react';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = props => {\r\n  const { good, neutral, bad, total, percentage, reset } = props;\r\n  return (\r\n    <>\r\n      <p className={styles.type}>\r\n        Good: <span className={styles.amount}>{good}</span>\r\n      </p>\r\n      <p className={styles.type}>\r\n        Neutral: <span className={styles.amount}>{neutral}</span>\r\n      </p>\r\n      <p className={styles.type}>\r\n        Bad: <span className={styles.amount}>{bad}</span>\r\n      </p>\r\n      <p className={styles.type}>\r\n        Total: <span className={styles.amount}>{total}</span>\r\n      </p>\r\n      <p className={styles.type}>\r\n        Positive feedbacks: <span className={styles.amount}>{percentage}</span>\r\n      </p>\r\n      <button className={styles.button} onClick={reset}>\r\n        Reset statistics\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <>\r\n      <p className={styles.message}>{message}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nNotification.defaultProps = {\r\n  message: ' ',\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\r\nimport Section from './components/Section/Section';\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport Notification from './components/Notification/Notification';\r\nimport './App.css';\r\n\r\nconst INITIAL_STATE = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n};\r\n\r\nclass App extends Component {\r\n  state = {\r\n    ...INITIAL_STATE,\r\n  };\r\n\r\n  total = 0;\r\n\r\n  positivePercentage = 0;\r\n\r\n  clickHandler = e => {\r\n    this.setState(() => ({\r\n      [e.target.name]: this.state[e.target.name] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback(state) {\r\n    this.total = 0;\r\n    for (let item in state) {\r\n      this.total += state[item];\r\n    }\r\n    return this.total;\r\n  }\r\n\r\n  countPositiveFeedbackPercentage(state) {\r\n    return (\r\n      (this.positivePercentage = Math.round(\r\n        Number(state.good / (this.total - state.neutral) || 0) * 100,\r\n      )) + '%'\r\n    );\r\n  }\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    const totalFeedbacks = this.countTotalFeedback(this.state);\r\n    const percentage = this.countPositiveFeedbackPercentage(this.state);\r\n    return (\r\n      <div className=\"feedbackWidget\">\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={this.state}\r\n            onLeaveFeedback={this.clickHandler}\r\n          />\r\n        </Section>\r\n\r\n        {totalFeedbacks === 0 ? (\r\n          <Notification message=\"No feedbacks given\" />\r\n        ) : (\r\n          <Section title=\"Statistics\">\r\n            <Statistics\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              total={totalFeedbacks}\r\n              percentage={percentage}\r\n              reset={this.reset}\r\n            />\r\n          </Section>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}